:root {
  --index: calc(1vw + 1vh);
  --transition: cubic-bezier(.1, .7, 0, 1);
}

.projects {
  display: flex;
  flex-direction: column;
  gap: 15px;

  .wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 30px 0;
  }

  h2 {
    font-size: 86px;
    text-transform: uppercase;
    color: #fff;
    margin: 0;
    line-height: 85px;
  }
  
  .items {
    display: flex;
    gap: 0.4rem;
    perspective: calc(var(--index) * 65);
  }
  
  .item {
    width: calc(var(--index) * 3);
    height: calc(var(--index) * 14);
    background-size: cover;
    background-position: center;
    cursor: pointer;
    filter: grayscale(1) brightness(.5);
    transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
    will-change: transform, filter, rotateY, width;
    position: relative;
    border: 1px solid #fff;
  
    a{
      position: absolute;
      bottom: 15px;
      right: 15px;
    }
  
    &::before, &::after {
      content: '';
      position: absolute;
      height: 100%;
      width: 20px;
      right: calc(var(--index) * -1);
    }
  
    &::after {
      left: calc(var(--index) * -1);
    }
  
    &:hover {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 10));
    }
  
    /* Right */
  
    &:hover + * {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
      z-index: -1;
    }
  
    &:hover + * + * {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
      z-index: -2;
    }
  
    &:hover + * + * + * {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
      z-index: -3;
    }
  
    &:hover + * + * + * + * {
      filter: inherit;
      transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
      z-index: -4;
    }
  
    /* Left */
  
    &:has(+ :hover) {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }
  
    &:has(+ * + :hover) {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }
  
    &:has(+ * + * + :hover) {
      filter: inherit;
      transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }
  
    &:has(+ * + * + * + :hover) {
      filter: inherit;
      transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }
  
    &:active,
    &:focus {
      width: 28vw;
      filter: inherit;
      z-index: 100;
      transform: translateZ(calc(var(--index) * 10));
      margin: 0 .45vw;
    }
  }
  
}

